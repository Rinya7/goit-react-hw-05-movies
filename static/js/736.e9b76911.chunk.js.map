{"version":3,"file":"static/js/736.e9b76911.chunk.js","mappings":"0QAEaA,E,OAAUC,EAAAA,IAAH,yC,SC0CpB,EAtCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAASN,EACV,GAAE,CAACA,IAEJ,IAAMM,EAAQ,mCAAG,WAAMC,GAAN,mGAEUC,EAAAA,EAAAA,IAAgBD,GAF1B,gBAELE,EAFK,EAELA,KAERL,EAAgBK,GAJH,gDAMbC,MAAM,KAAMC,SANC,yDAAH,sDAUd,OACE,wBACGR,EAAaS,KAAI,gBAAGC,EAAH,EAAGA,KAAMN,EAAT,EAASA,GAAIO,EAAb,EAAaA,aAAb,OAChB,0BACGD,GACD,mBACA,SAACf,EAAD,CACEiB,IACED,EAAY,0CAC2BA,GACnCE,EAENC,IAAI,OATCV,EADO,KAgBvB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastImg = styled.img`\n  width: 200px;\n`;\n","import { castFromApiById } from '../../data/filmsFromApi';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport defaultImage from '../../images/not-found-image.jpg';\nimport { CastImg } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [filmCastList, setFilmCastList] = useState([]);\n\n  useEffect(() => {\n    FilmCast(movieId);\n  }, [movieId]);\n\n  const FilmCast = async id => {\n    try {\n      const { cast } = await castFromApiById(id);\n\n      setFilmCastList(cast);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <ul>\n      {filmCastList.map(({ name, id, profile_path }) => (\n        <li key={id}>\n          {name}\n          <br></br>\n          <CastImg\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                : defaultImage\n            }\n            alt=\"\"\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n"],"names":["CastImg","styled","movieId","useParams","useState","filmCastList","setFilmCastList","useEffect","FilmCast","id","castFromApiById","cast","alert","message","map","name","profile_path","src","defaultImage","alt"],"sourceRoot":""}