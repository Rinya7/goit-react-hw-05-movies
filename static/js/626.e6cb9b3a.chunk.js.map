{"version":3,"file":"static/js/626.e6cb9b3a.chunk.js","mappings":"sRAGaA,EAAYC,EAAAA,EAAAA,GAAH,2DAMTC,GAAWD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,kjBAwBRG,EAAYH,EAAAA,EAAAA,IAAH,yC,kBCsCtB,EA/DqB,WACnB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAASN,EACV,GAAE,CAACA,IAEJ,IAAMM,EAAQ,mCAAG,WAAMC,GAAN,iGAESC,EAAAA,EAAAA,IAAiBD,GAF1B,OAEPE,EAFO,OAGbL,EAAYK,GAHC,gDAKbC,MAAM,KAAMC,SALC,yDAAH,sDASd,OACE,2BACE,UAACZ,EAAD,YACE,SAACF,EAAD,CAAUe,GAAG,IAAb,mBACA,kBACCT,IACC,gBACEU,IACEV,EAASW,cAAT,0CACuCX,EAASW,eAC5CC,EAENC,IAAI,YAGR,4BACE,wBAAKb,EAASc,kBACd,0CAAkBd,EAASe,iBAE3B,sCACCf,EAASgB,UACV,iBACChB,IACC,iCACE,sCACA,uBAAIA,EAASiB,OAAOC,KAAI,qBAAGC,KAAkB,GAArB,aAI9B,iDACA,2BACE,SAAC3B,EAAD,WACE,SAAC,KAAD,CAASiB,GAAG,OAAZ,8BAEF,SAACjB,EAAD,WACE,SAAC,KAAD,CAASiB,GAAG,UAAZ,oCAGJ,SAAC,EAAAW,SAAD,CAAUC,UAAU,qDAApB,UACE,SAAC,KAAD,UAKT,C","sources":["components/MovieDetails/MovieDetals.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const AditionLi = styled.li`\n  .active {\n    color: red;\n  }\n`;\n\nexport const BackLick = styled(Link)`\n  color: rgb(252, 255, 235);\n  font-size: 16px;\n  line-height: 16px;\n  padding: 6px;\n  border-radius: 15px;\n  font-family: Georgia, serif;\n  font-weight: normal;\n  text-decoration: none;\n  font-style: normal;\n  font-variant: normal;\n  text-transform: none;\n  background-image: linear-gradient(\n    to right,\n    rgb(28, 110, 164) 0%,\n    rgb(35, 136, 203) 50%,\n    rgb(20, 78, 117) 100%\n  );\n  box-shadow: rgb(0, 0, 0) 5px 5px 15px 5px;\n  border: 2px solid rgb(28, 110, 164);\n  display: inline-block;\n  margin: 20px;\n`;\n\nexport const Conteiner = styled.div`\n  margin: 20px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { Outlet, NavLink } from 'react-router-dom';\nimport { filmsFromApiById } from '../../data/filmsFromApi';\nimport { useState, useEffect } from 'react';\nimport { AditionLi, BackLick, Conteiner } from './MovieDetals.styled';\nimport { Suspense } from 'react';\nimport defaultImage from '../../images/not-found-image.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmById, setFilmById] = useState('');\n\n  useEffect(() => {\n    FilmInfo(movieId);\n  }, [movieId]);\n\n  const FilmInfo = async id => {\n    try {\n      const results = await filmsFromApiById(id);\n      setFilmById(results);\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  return (\n    <main>\n      <Conteiner>\n        <BackLick to=\"/\">Back</BackLick>\n        <br></br>\n        {filmById && (\n          <img\n            src={\n              filmById.backdrop_path\n                ? `https://image.tmdb.org/t/p/w500/${filmById.backdrop_path}`\n                : defaultImage\n            }\n            alt=\"poster\"\n          />\n        )}\n        <div>\n          <h1>{filmById.original_title}</h1>\n          <p>Date reliase: {filmById.release_date}</p>\n\n          <h2>OVERVIEW:</h2>\n          {filmById.overview}\n          <p></p>\n          {filmById && (\n            <>\n              <h4>Genres: </h4>\n              <p>{filmById.genres.map(({ name }) => name + ' ')}</p>\n            </>\n          )}\n        </div>\n        <h3>Adition information</h3>\n        <ul>\n          <AditionLi>\n            <NavLink to=\"cast\">click to Cast</NavLink>\n          </AditionLi>\n          <AditionLi>\n            <NavLink to=\"rewiews\">click to Rewiews</NavLink>\n          </AditionLi>\n        </ul>\n        <Suspense fallback={<div>Please wait. Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </Conteiner>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["AditionLi","styled","BackLick","Link","Conteiner","movieId","useParams","useState","filmById","setFilmById","useEffect","FilmInfo","id","filmsFromApiById","results","alert","message","to","src","backdrop_path","defaultImage","alt","original_title","release_date","overview","genres","map","name","Suspense","fallback"],"sourceRoot":""}